version: '3'

services:
  # Order Service
  order-service:
    container_name: order-service
    image: ghcr.io/imamlabs/order-service:latest
    ports:
      - "3000:3000"  # Memetakan port host 3000 ke port kontainer 3000
    depends_on:
      rabbitmq:
        condition: service_healthy  # Menunggu layanan RabbitMQ sebelum memulai layanan ini
    networks:
      - rabbitmq_network
    #command: sh -c "sleep 120 && npm start"  # Menambahkan penundaan sebelum menjalankan layanan


  # Shipping Service
  shipping-service:
    container_name: shipping-service
    image: ghcr.io/imamlabs/shipping-service:latest
    ports:
      - "3001:3001"  # Memetakan port host 3001 ke port kontainer 3001
    depends_on:
      rabbitmq:
        condition: service_healthy  # Menunggu layanan RabbitMQ sebelum memulai layanan ini
    networks:
      - rabbitmq_network
    #command: sh -c "sleep 120 && npm start"  # Menambahkan penundaan sebelum menjalankan layanan

  # RabbitMQ Service
  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:3.11-management"
    ports:
      - "5673:5672"  # Memetakan port host 5673 ke port kontainer 5672
      - "15673:15672"  # Memetakan port host 15673 ke port kontainer 15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/  # Mount volume untuk data RabbitMQ
      - rabbitmq_log:/var/log/rabbitmq  # Mount volume untuk log RabbitMQ
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]  # Menentukan tes kesehatan untuk layanan RabbitMQ
    networks:
      - rabbitmq_network

volumes:
  rabbitmq_data:  # Volume untuk menyimpan data RabbitMQ
  rabbitmq_log:  # Volume untuk menyimpan log RabbitMQ

networks:
  rabbitmq_network:
    driver: bridge  # Menggunakan driver jaringan bridge untuk rabbitmq_network
