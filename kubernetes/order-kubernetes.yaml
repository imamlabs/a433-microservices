# Definisi StatefulSet untuk order-service
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: order-service-statefulset  # Nama StatefulSet
  namespace: rabbit               # Namespace tempat StatefulSet ditempatkan
spec:
  serviceName: order-service-service  # Nama Service yang akan terhubung ke pod-pod StatefulSet
  replicas: 1                            # Jumlah replika (dalam kasus ini, satu pod)
  selector:
    matchLabels:
      app: order-service                 # Label untuk memilih pod yang dimiliki oleh StatefulSet
  template:
    metadata:
      labels:
        app: order-service               # Label yang diterapkan ke pod-pod yang dibuat oleh StatefulSet
    spec:
      # Inisialisasi container yang menunggu ketersediaan layanan RabbitMQ
      initContainers:
      - name: wait-for-rabbit
        image: alpine:latest
        # Perintah shell untuk menunggu hingga DNS untuk layanan RabbitMQ dapat diresolusi
        command: ['sh', '-c', 'until nslookup rabbitmq.rabbit.svc.cluster.local; do echo waiting for rabbit; sleep 2; done']
      # Container utama yang menjalankan order-service
      containers:
      - name: order-service
        image: ghcr.io/imamlabs/order-service:latest  # Nama image untuk container order-service
        ports:
        - containerPort: 3000                      # Port yang digunakan oleh container order-service
        env:
        - name: AMQP_URL                           # Variabel lingkungan untuk URL AMQP
          value: "amqp://guest:guest@rabbitmq:5672"  # URL AMQP dengan informasi koneksi
    
---

# Definisi Service untuk order-service
apiVersion: v1
kind: Service
metadata:
  name: order-service-service            # Nama Service
  namespace: rabbit                      # Namespace tempat Service ditempatkan
spec:
  selector:
    app: order-service                   # Selektor untuk memilih pod yang akan menjadi backend Service
  ports:
    - protocol: TCP
      port: 3000                          # Port yang terbuka di Service
      targetPort: 3000                    # Port yang diarahkan ke pod-pod yang dipilih
  type: NodePort                         # Jenis Service (NodePort memungkinkan akses dari luar cluster)
